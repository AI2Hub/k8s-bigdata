apiVersion: apps/v1
kind: Deployment
metadata:
  name: spark
  labels:
    app: spark
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spark
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 70%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: spark
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: spark
                operator: Exists
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - spark
              topologyKey: "kubernetes.io/hostname"
      imagePullSecrets:
      - name: harbor-secret
      terminationGracePeriodSeconds: 30
      containers:
      - name: spark
        image: 10.150.30.17:28080/ops/spark:3
        imagePullPolicy: IfNotPresent        
        resources:
          limits:
            memory: "4Gi" 
          requests:
            cpu: 0.2
            memory: "500Mi" 
        env:
        - name: SPARK_MODE
          value: "master"
        - name: SPARK_RPC_AUTHENTICATION_ENABLED
          value: "no"
        - name: SPARK_RPC_ENCRYPTION_ENABLED
          value: "no"
        - name: SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED
          value: "no"
        - name: SPARK_SSL_ENABLED
          value: "no"
        ports:
        - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: spark
spec:
  ports:
  - name: web
    port: 8080
    targetPort: 8080
  - name: spark
    port: 7077
    targetPort: 7077
  selector:
    app: spark
